<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Roommate Harmony</title>
    <style>
    
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Arial, sans-serif;
        }

        body {
            background-color: #eaeef3;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        /* Header */
        header,
        #music,
        #recipes,
        #chat,
        .hero-section {
            background: url('../public/image.png') no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
            color: rgb(0, 0, 0);
            padding: 20px 0;
            text-align: center;
            position: relative;
        }

        header h1 {
            margin: 0;
            font-size: 2.8em;
        }

    
        nav ul {
            list-style-type: none;
            text-align: center;
            padding: 10px;
        }

        nav ul li {
            display: inline;
            margin: 0 20px;
        }

        nav a {
            color: black;
            text-decoration: none;
            font-size: 1.2em;
            padding: 7px 15px;
            border-radius: 5px;
            transition: background-color 0.3s, transform 0.3s;
        }

        nav a:hover {
            background-color: #214478;
            transform: translateY(-2px);
        }

        section {
            background: #fff;
            padding: 20px;
            margin: 20px 0;
            border-radius: 8px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            transition: box-shadow 0.3s, transform 0.3s;
        }

        section:hover {
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            transform: translateY(-3px);
        }

        section h2 {
            color: #4a69bd;
            font-size: 2em;
            margin-bottom: 10px;
        }

        footer {
            text-align: center;
            padding: 20px 0;
            background-color: #2c3e50;
            color: #fff;
            margin-top: 20px;
        }

        .spotify-login {
            display: inline-block;
            background-color: #1DB954;
            color: white;
            padding: 10px 20px;
            border-radius: 20px;
            text-decoration: none;
            margin-top: 10px;
        }

        .spotify-login:hover {
            background-color: #1ed760;
        }


        #recipe-display {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 8px;
        }

        #recipe-display h3 {
            color: #4a69bd;
        }

        #recipe-display img {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
        }

        #chat {
            background-color: #f4f4f4;
            padding: 10px;
            border-radius: 8px;
            margin-top: 20px;
        }

        #messages {
            list-style-type: none;
            padding: 0;
            max-height: 300px;
            overflow-y: scroll;
        }

        #chat-form {
            margin-top: 10px;
        }

        #message-input {
            width: 80%;
            padding: 10px;
        }


        @media (max-width: 768px) {
            header h1 {
                font-size: 2em;
            }

            nav ul li {
                display: block;
                margin: 10px 0;
            }

            section {
                margin: 10px;
            }
        }

        .hero-image {
            width: 100%;
            height: auto;
            opacity: 0.8;
    
        }

        .custom-illustration {
            max-width: 100%;
            height: auto;
            margin: 20px 0;
        }

        @media (max-width: 768px) {
        }
    </style>
</head>

<body>
    <header>
        <h1>Roommate Harmony</h1>
        <nav>
            <ul>
                <li><a href="#music">Music Sharing</a></li>
                <li><a href="#recipes">Recipe Sharing</a></li>
                <li><a href="#chat">Real-time Chat</a></li>
            </ul>
        </nav>
    </header>

    <div class="hero-section">
    </div>

    <section id="music" class="background-shared">
        <h2>Music Sharing</h2>

        <a href="/auth/spotify" class="spotify-login">Login with Spotify</a>
    </section>


    <section id="recipes">
        <h2>Recipe Sharing</h2>
        <button id="fetch-recipe">Get Random Recipe</button>
        <div id="recipe-display"></div>
    </section>

    <script>
        document.getElementById('fetch-recipe').addEventListener('click', function() {
            fetch('/api/random-recipe')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    document.getElementById('recipe-display').innerHTML = html;
                })
                .catch(error => console.error('Fetch error:', error));
        });
    </script>


    <section id="chat">
        <h2>Real-time Communication</h2>
        <ul id="messages"></ul>
        <form id="chat-form">
            <input id="message-input" autocomplete="off" />
            <button>Send</button>
        </form>
    </section>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        document.getElementById('chat-form').addEventListener('submit', function (e) {
            e.preventDefault();
            const messageInput = document.getElementById('message-input');
            if (messageInput.value) {
                socket.emit('chat message', messageInput.value);
                messageInput.value = '';
            }
        });

        socket.on('chat message', function (msg) {
            const messages = document.getElementById('messages');
            const messageItem = document.createElement('li');
            messageItem.textContent = msg;
            messages.appendChild(messageItem);
            window.scrollTo(0, document.body.scrollHeight);
        });
    </script>




    <script src="script.js"></script>
</body>


<%- include('footer') %>